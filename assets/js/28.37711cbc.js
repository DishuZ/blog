(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{435:function(t,s,a){"use strict";a.r(s);var i=a(35),l=Object(i.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("1. 时间复杂度")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")]),t._v(" "),a("strong",[t._v("时间复杂度")]),t._v(" 是执行算法所需的计算工作量，因为整个算法的执行时间与基本操作重复执行的次数成正比，所以"),a("strong",[t._v("将算法中基本操作的执行次数作为时间复杂度的度量")]),t._v(" 。一般情况下，按照基本操作执行次数最多的输入来计算时间复杂度，并且多数情况下我们把最深层循环内的语句所描述的操作作为基本操作。")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("2. 循环队列的顺序表中，为什么要空一个位置？")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")]),t._v(" 这是为了用来区分队空 "),a("code",[t._v("q.rear == q.front")]),t._v(" 和队满 "),a("code",[t._v("(q.rear + 1) % maxSize == q.front")]),t._v(" 的情况。如果不空一个位置，那么判断队空和队满的条件是一样的。")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("3. 什么是二叉排序树？以及它的原理，算法。（二叉排序树的查找过程）")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])]),t._v(" "),a("p",[a("strong",[t._v("定义：")]),t._v(" "),a("strong",[t._v("二叉排序树")]),t._v("又称"),a("strong",[t._v("二叉查找树")]),t._v("，它或者是一颗空树，或者满足以下性质的二叉树：")]),t._v(" "),a("ol",[a("li",[t._v("若左子树不空，则左子树上所有结点的值均小于根节点的值；")]),t._v(" "),a("li",[t._v("若右子树不空，则右子树上所有结点的值均大于根节点的值；")]),t._v(" "),a("li",[t._v("左右子树也分别是二叉排序树。")])]),t._v(" "),a("p",[t._v("从这三点性质中，我们可以发现二叉排序树的定义是递归的，并且树中的每一个结点都满足 "),a("code",[t._v("左子树的值")]),t._v(" < "),a("code",[t._v("根结点的值")]),t._v(" < "),a("code",[t._v("右子树的值")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("原理步骤：")])]),t._v(" "),a("ol",[a("li",[t._v("若根结点的值等于查找的关键字，成功。")]),t._v(" "),a("li",[t._v("否则，若小于根结点的关键字值，递归查左子树。")]),t._v(" "),a("li",[t._v("若大于根结点的关键字值，递归查右子树。")]),t._v(" "),a("li",[t._v("若子树为空，查找不成功。")])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("4. 哈夫曼树")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])]),t._v(" "),a("p",[a("strong",[t._v("定义：")])]),t._v(" "),a("p",[t._v("给定 "),a("code",[t._v("n")]),t._v(" 个权值作为 "),a("code",[t._v("n")]),t._v(" 个叶子结点，构造一棵二叉树，若"),a("strong",[t._v("带权路径长度")]),t._v("达到最小，称这样的二叉树为最优二叉树，也称为"),a("strong",[t._v("哈夫曼树(Huffman tree)")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("构造方法：")])]),t._v(" "),a("p",[t._v("假设有 "),a("code",[t._v("n")]),t._v(" 个权值，则构造出的哈夫曼树有 "),a("code",[t._v("n")]),t._v(" 个叶子结点。"),a("code",[t._v("n")]),t._v(" 个权值分别设为 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("w")]),a("mn",[t._v("1")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("w_1")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.5806em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[t._v("w")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.0269em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("1")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v("、"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("w")]),a("mn",[t._v("2")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("w_2")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.5806em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[t._v("w")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.0269em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("2")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v("、"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mo",[t._v("…")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("…")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.123em"}}),a("span",{staticClass:"minner"},[t._v("…")])])])]),t._v(" 、"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("w")]),a("mi",[t._v("n")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("w_n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.5806em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[t._v("w")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.1514em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.0269em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight"},[t._v("n")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v("，则哈夫曼树的构造规则为：")]),t._v(" "),a("ol",[a("li",[t._v("将 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("w")]),a("mn",[t._v("1")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("w_1")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.5806em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[t._v("w")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.0269em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("1")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v("、"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("w")]),a("mn",[t._v("2")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("w_2")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.5806em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[t._v("w")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.0269em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("2")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v("、"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mo",[t._v("…")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("…")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.123em"}}),a("span",{staticClass:"minner"},[t._v("…")])])])]),t._v(" 、"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("w")]),a("mi",[t._v("n")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("w_n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.5806em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[t._v("w")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.1514em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.0269em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight"},[t._v("n")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v(" 看成是有 "),a("code",[t._v("n")]),t._v(" 棵树的森林 "),a("code",[t._v("F")]),t._v("（每棵树仅有一个结点）；")]),t._v(" "),a("li",[t._v("在森林中选出两个根结点的权值最小的树进行合并，作为一棵新树 "),a("code",[t._v("T")]),t._v(" 的左、右子树，且新树 "),a("code",[t._v("T")]),t._v(" 的根结点的权值为其左、右子树根结点权值之和；")]),t._v(" "),a("li",[t._v("从森林 "),a("code",[t._v("F")]),t._v(" 中删除选取的两棵树，并将新树 "),a("code",[t._v("T")]),t._v(" 加入森林 "),a("code",[t._v("F")]),t._v("；")]),t._v(" "),a("li",[t._v("重复 "),a("code",[t._v("2)")]),t._v("、"),a("code",[t._v("3)")]),t._v(" 步，直到森林中只剩一棵树为止，该树即为所求得的哈夫曼树。")])]),t._v(" "),a("p",[a("strong",[t._v("特点：")])]),t._v(" "),a("ol",[a("li",[t._v("权值越大的结点，距离根节点越近；")]),t._v(" "),a("li",[t._v("树中没有度为一的结点。")])]),t._v(" "),a("p",[a("strong",[t._v("应用：")]),t._v(" 哈夫曼编码，减少编码的长度。哈夫曼编码就是长度最短的前缀编码。")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("5. 简要介绍一下最小生成树")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])]),t._v(" "),a("p",[t._v("要了解最小生成树，可以先了解生成树的概念。")]),t._v(" "),a("p",[t._v("无向图G中的生成树是具有图G中所有顶点，但边数最少的连通子图。无向图可以有多个生成树。")]),t._v(" "),a("p",[t._v("带权图的生成树中，总权值最小的生成树称为最小生成树，或者说，最小生成树的拓扑图中的路径长度之和最小。")]),t._v(" "),a("p",[t._v("构建最小生成树，可以使用 "),a("code",[t._v("Prim")]),t._v(" 普里姆算法和 "),a("code",[t._v("Kruskal")]),t._v(" 克鲁斯卡尔算法。")]),t._v(" "),a("p",[a("code",[t._v("Prim")]),t._v(" 的基本思想是：首先，选取图中的任一顶点作为一棵树，从与这棵树相接的边中选取权值最小的边，然后将该边及连接的顶点并入到树中，此时得到有两个顶点的树。接着，从与这棵树相接的边中选取权值最小的边，然后将该边及连接的定点吗并入到树中，此时得到有三个顶点的树。以此类推，直到图中所有的顶点都并入到树中为止，得到的就是最小生成树。")]),t._v(" "),a("p",[a("code",[t._v("Kruskal")]),t._v(" 的基本思想是：最开始，将图中所有的边按照权值从小到大排序，然后从小到大遍历这些边。首先，选取权值最小的边及连接的顶点并入树中；接着，选取权值第二小的边，若该边并入树中不构成环，就并入树中；接着选取权值第三小的边，以此类推，直到图中所有的顶点都并入树中为止，得到的就是最小生成树。")]),t._v(" "),a("p",[t._v("最小生成树有它的实际应用，如 网线部署-如何用最小的代价/最少的网线让全村能够上网。")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("6. 简要介绍一下最短路径")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])]),t._v(" "),a("p",[t._v("最短路径可以分为两类：单源最短路径和多源汇最短路径，我们熟知的 "),a("code",[t._v("Dijkstra")]),t._v(" 迪杰斯特拉算法和 "),a("code",[t._v("Flyod")]),t._v(" 佛洛依德算法就分别属于这两类。")]),t._v(" "),a("p",[a("code",[t._v("Dijkstra")]),t._v(" 是构建图中一个点到其余顶点的最短路径，它的算法思想是：")]),t._v(" "),a("p",[t._v("首先分为集合 "),a("code",[t._v("S")]),t._v(" 和集合 "),a("code",[t._v("T")]),t._v("，集合 "),a("code",[t._v("S")]),t._v(" 存放已经并入的顶点，集合 "),a("code",[t._v("T")]),t._v(" 存放暂未并入的顶点。")]),t._v(" "),a("p",[t._v("初始时，集合 "),a("code",[t._v("S")]),t._v(" 中只有源点 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("V")]),a("mn",[t._v("0")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("V_0")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.22222em"}},[t._v("V")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.2222em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("0")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v("，接着，不断地从集合 "),a("code",[t._v("T")]),t._v(" 中选取到源点 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("V")]),a("mn",[t._v("0")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("V_0")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.22222em"}},[t._v("V")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.2222em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("0")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v(" 的路径长度最小的顶点 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("u")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("V_u")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.22222em"}},[t._v("V")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.1514em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.2222em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight"},[t._v("u")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v("，将 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("u")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("V_u")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.22222em"}},[t._v("V")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.1514em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.2222em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight"},[t._v("u")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v(" 并入到集合 "),a("code",[t._v("S")]),t._v(" 中，并以 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("u")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("V_u")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.22222em"}},[t._v("V")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.1514em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.2222em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight"},[t._v("u")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v(" 为中转站，更新集合 "),a("code",[t._v("T")]),t._v(" 中所有顶点到源点 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("V")]),a("mn",[t._v("0")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("V_0")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.22222em"}},[t._v("V")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.2222em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("0")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])]),t._v(" 的最短路径长度，直到集合 "),a("code",[t._v("T")]),t._v(" 中的所有顶点都并入到集合 "),a("code",[t._v("S")]),t._v(" 中为止，此时得到最短路径树。")]),t._v(" "),a("p",[a("code",[t._v("Dijkstra")]),t._v(" 的时间复杂度是 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("O")]),a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("msup",[a("mi",[t._v("n")]),a("mn",[t._v("2")])],1),a("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(n^2)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1.0641em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal"},[t._v("n")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.8141em"}},[a("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("2")])])])])])])])]),a("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(" ，但如果通过堆优化，时间复杂度可以达到 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("O")]),a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("mi",[t._v("m")]),a("mo",[t._v("∗")]),a("mi",[t._v("l")]),a("mi",[t._v("o")]),a("msub",[a("mi",[t._v("g")]),a("mn",[t._v("2")])],1),a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("mi",[t._v("n")]),a("mo",{attrs:{stretchy:"false"}},[t._v(")")]),a("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(m*log_2(n))")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord mathnormal"},[t._v("m")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),a("span",{staticClass:"mbin"},[t._v("∗")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),a("span",{staticClass:"mord mathnormal"},[t._v("o")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("2")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord mathnormal"},[t._v("n")]),a("span",{staticClass:"mclose"},[t._v("))")])])])]),t._v("。"),a("code",[t._v("Flyod")]),t._v(" 的时间复杂度是 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("O")]),a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("msup",[a("mi",[t._v("n")]),a("mn",[t._v("3")])],1),a("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(n^3)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1.0641em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal"},[t._v("n")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.8141em"}},[a("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("3")])])])])])])])]),a("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(" 。")]),t._v(" "),a("p",[a("code",[t._v("Dijkstra")]),t._v(" 可以解决正权边的最短路径问题，但如果图中有负权边，那决定不能使用 "),a("code",[t._v("Dijkstra")]),t._v("。需要使用 "),a("code",[t._v("Bellman-Ford")]),t._v(" 算法 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("O")]),a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("mi",[t._v("m")]),a("mo",[t._v("∗")]),a("mi",[t._v("n")]),a("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(m*n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord mathnormal"},[t._v("m")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),a("span",{staticClass:"mbin"},[t._v("∗")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathnormal"},[t._v("n")]),a("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(" 和 "),a("code",[t._v("SPFA")]),t._v(" 算法 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("O")]),a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("mi",[t._v("m")]),a("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(m)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord mathnormal"},[t._v("m")]),a("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(" 来解决。")]),t._v(" "),a("p",[a("code",[t._v("Flyod")]),t._v(" 则可以用来解决有负权边、无负环的问题。")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("7. 简单概述一下查找章节")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("8. 简单概述一下排序章节")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("9. 什么图可以进行拓扑排序？")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")]),t._v(" 有向无环图")])]),t._v(" "),a("h2",{attrs:{id:"数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("数据库的设计过程")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])]),t._v(" "),a("ol",[a("li",[t._v("需求分析阶段：分析项目的数据、功能、性能需求")]),t._v(" "),a("li",[t._v("概念结构设计阶段：根据需求设计一个 "),a("code",[t._v("E-R")]),t._v(" 模型")]),t._v(" "),a("li",[t._v("逻辑结构设计阶段：根据 "),a("code",[t._v("E-R")]),t._v(" 模型转化为表")]),t._v(" "),a("li",[t._v("物理结构设计阶段")]),t._v(" "),a("li",[t._v("数据库实施阶段：编程、测试、试运行")]),t._v(" "),a("li",[t._v("数据库运行和维护阶段")])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("并发一致性问题")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])]),t._v(" "),a("p",[t._v("原因：破坏了事务的隔离性")]),t._v(" "),a("p",[t._v("问题：丢失数据、读脏数据、不可重复读（读时修改）、幻影读（读时插入）")]),t._v(" "),a("p",[t._v("解决方法：并发控制，通过封锁（获取锁、释放锁、检查锁状态）来实现，需要用户自己控制。而DBMS提供了事物的隔离级别，让用户以更轻松的方式处理并发一致性问题")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("封锁")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])]),t._v(" "),a("p",[a("strong",[t._v("封锁粒度：")])]),t._v(" "),a("p",[a("code",[t._v("Mysql")]),t._v(" 中提供了两种封锁粒度：行级锁和表级锁")]),t._v(" "),a("p",[a("strong",[t._v("封锁类型：")])]),t._v(" "),a("ul",[a("li",[t._v("读取锁")]),t._v(" "),a("li",[t._v("意向锁")])]),t._v(" "),a("p",[a("strong",[t._v("封锁协议：")])]),t._v(" "),a("ul",[a("li",[t._v("三级封锁协议")]),t._v(" "),a("li",[t._v("两段锁协议")])])]),t._v(" "),a("h2",{attrs:{id:"软件工程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件工程"}},[t._v("#")]),t._v(" 软件工程")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("什么是软件工程？目前有哪几种主要的软件工程方法？")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")]),t._v(" 概括地说，软件工程是指导计算机软件开发和维护的一门工程学科，用工程的概念、原理、技术和方法来开发和维护软件，结合经过时间验证的管理技术和目前能得到的最新的技术方法来开发出高质量的软件并进行有效的维护，这就是软件工程。它涉及程序设计语言、数据库、软件开发工具、系统平台等等方面的知识。")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("白盒测试和黑盒测试")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("黑盒测试")]),t._v(" 也称为功能测试，它是用来测试每个功能是否都能正常使用。")]),t._v(" "),a("li",[a("strong",[t._v("白盒测试")]),t._v(" 也称为结构测试，它是知道产品内部工作过程，可通过测试来检测产品内部动作是否按照规格说明书的规定正常运行。")])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("请简述你对面向对象和面向过程两种编程思想的认知和理解")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("面向过程\n就是分析出解决问题所需要的步骤及过程，然后用函数把这些步骤一步一步实现，使用的时候一个一个一次调用就可以了。")])]),t._v(" "),a("li",[a("p",[t._v("面向对象\n把构成问题事务分解成各个对象。")])])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("DETAILS")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("DETAILS")]),t._v(" "),a("p",[a("strong",[t._v("⌛️ 答：")])])])])}),[],!1,null,null,null);s.default=l.exports}}]);